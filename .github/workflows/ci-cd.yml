# üöÄ CI/CD Pipeline - Chess RPG
# D√©clenchement automatique sur push vers develop ou main

name: CI/CD Pipeline

on:
  push:
    branches:
      - main      # Production
      - develop   # D√©veloppement
  pull_request:
    branches:
      - main
      - develop

jobs:
  #  Tests et Validation
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file
        run: |
          echo "POSTGRES_USER=postgres" >> .env
          echo "POSTGRES_PASSWORD=postgres" >> .env
          echo "POSTGRES_DB=appdb_test" >> .env
          echo "DB_PORT=5432" >> .env
          echo "API_PORT=3000" >> .env

      - name: Build images
        run: |
          docker compose build

      - name: Run tests
        run: |
          docker compose up -d db
          sleep 10
          docker compose up -d api
          sleep 15
          # Test API health
          curl -f http://localhost:3000/api/ping || exit 1
          # Test DB connection
          curl -f http://localhost:3000/api/dbtest || exit 1

      - name: Cleanup
        if: always()
        run: docker compose down -v

  # D√©ploiement automatique
  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # D√©ploiement DEVELOP
      - name: Deploy to DEV (develop branch)
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "D√©ploiement DEV d√©clench√© !"
          echo "Branch: ${{ github.ref }}"
          # Ici, ajoutez vos commandes de d√©ploiement DEV
          # Ex: ssh vers serveur dev, docker compose pull, etc.

      # D√©ploiement PRODUCTION
      - name: Deploy to PROD (main branch)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "D√©ploiement PRODUCTION d√©clench√© !"
          echo "Branch: ${{ github.ref }}"
          echo "Commit: ${{ github.sha }}"
          # Ici, ajoutez vos commandes de d√©ploiement PROD
          # Ex: ssh vers serveur prod, docker compose -f prod.yml pull, etc.

      # Construire et publier les images Docker (optionnel)
      - name: Build and push Docker images
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Construction des images de production..."
          # Exemple avec Docker Hub ou GitHub Container Registry
          # docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          # docker compose -f docker-compose.prod.yml build
          # docker compose -f docker-compose.prod.yml push
